#!/bin/bash
# This is the command to use when running interactive commands
# eg:
#   edi ember release --minor
# see https://gist.github.com/d11wtq/8699521

VERSION="2.14.0"

if [ -r ~/.config/edi/settings ]
then
    . ~/.config/edi/settings
fi

# Allow overriding the edi version
if [ -n "$EDI_EMBER_VERSION" ]
then
    VERSION=$EDI_EMBER_VERSION
fi

linked_volumes=""
if [ -r $HOME/.local/lib/node_modules/ ]
then
    for file in `find $HOME/.local/lib/node_modules/ -maxdepth 1 -type l`
    do
        name=`basename $file`
        real_target=`readlink $file`
        linked_volumes="$linked_volumes --volume $file:/usr/lib/node_modules/$name/:cached "
    done
fi

ssh_agent_options=""
if [ -n "$EDI_SSH_AGENT_CONTAINER" ]
then
    SSH_AGENT_NAME="pinata-sshd"

    # start ssh agent, which forwards ssh-socket. Known bug in docker for mac: https://github.com/docker/for-mac/issues/410
    if [ ! "$(docker ps -q -f name=$SSH_AGENT_NAME)" ]; then

        echo "Starting $SSH_AGENT_NAME"

        if [ "$(docker ps -aq -f status=exited -f name=$SSH_AGENT_NAME)" ]; then
            # cleanup
            docker rm $SSH_AGENT_NAME
        fi
        pinata-ssh-forward
        ssh-add
    fi
    ssh_agent_options="$(pinata-ssh-mount)"
fi

mkdir -p $HOME/.ssh
touch $HOME/.ssh/known_hosts

standard_options="--volume `pwd`:/app/:delegated \
                  --volume /app/tmp \
                  --volume $HOME/.ssh/known_hosts:/root/.ssh/known_hosts:cached \
                  --volume $HOME/.gitconfig:/root/.gitconfig:delegated \
                  $linked_volumes \
                  $ssh_agent_options"

docker_image="madnificent/ember:$VERSION"


if [ -n "$EDI_USE_EDI_DAEMON" ]
then
    CONTAINER_NAME="edi"

    # check if daemon container runs, if not start it (and clean eventual exited containers)
    # see https://stackoverflow.com/questions/38576337/execute-bash-command-if-docker-container-does-not-exist
    if [ ! "$(docker ps -q -f name=$CONTAINER_NAME)" ]; then

        echo "Starting container named $CONTAINER_NAME"

        # cleanup exited edi daemon
        if [ "$(docker ps -aq -f status=exited -f name=$CONTAINER_NAME)" ]; then
            docker rm $CONTAINER_NAME
        fi

        # run new edi daemon
        docker run -td --name $CONTAINER_NAME \
               $standard_options \
               $docker_image ;
    fi

    # run command
    echo "Executing command $@ on $CONTAINER_NAME"
    docker exec -ti $CONTAINER_NAME $@
else
    docker run --rm \
           -it \
           --volume $(dirname $SSH_AUTH_SOCK):$(dirname $SSH_AUTH_SOCK) \
           -e SSH_AUTH_SOCK=$SSH_AUTH_SOCK \
           $standard_options \
           $docker_image $@
fi
